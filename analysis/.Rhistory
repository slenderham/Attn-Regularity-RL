name='', labels = parse_format())+
theme(legend.position = c(0.8, 0.5), legend.direction = "vertical",
legend.text.align = 0, legend.text = element_text(size=22)) +
scale_x_discrete(name ="Value estimation bout")
ggplot(data=gt_val_results, mapping=aes(x=Bout, color=Dimension)) +
geom_line(mapping=aes(y=Coefficients), linewidth=1) +
geom_errorbar(mapping=aes(ymin=Coefficients-SEs, ymax=Coefficients+SEs), width=0.2, linewidth=0.8) +
geom_point(mapping=aes(y=Coefficients), shape=21, size=3, stroke=1, fill = "white") +
geom_text(mapping=aes(y=max(Coefficients)+max(SEs)+0.05, label = pval_diff), size=7, color='black') +
theme(text = element_text(size = 22), axis.text = element_text(size = 22),
panel.grid.major = element_blank(), panel.grid.minor = element_blank(),
panel.background = element_blank(), axis.line = element_line(colour = "black")) +
scale_color_manual(breaks = c("F[m]", "F[n]", "O"),
values=c('deepskyblue', 'darkorange', 'green3'),
name='', labels = parse_format())+
theme(legend.position = c(0.9, 0.5), legend.direction = "vertical",
legend.text.align = 0, legend.text = element_text(size=22)) +
scale_x_discrete(name ="Value estimation bout")
ggsave(filename="prob_est_betas_lme_sep.pdf", path=figure_data_dir, device='pdf',
width=5.5, height=5.5)
ggsave(filename="prob_est_betas_lme_sep.pdf", path=figure_data_dir, device='pdf',
width=6.5, height=5.5)
ggplot(data=gt_val_results, mapping=aes(x=Bout, color=Dimension)) +
geom_line(mapping=aes(y=Coefficients), linewidth=1) +
geom_errorbar(mapping=aes(ymin=Coefficients-SEs, ymax=Coefficients+SEs), width=0.2, linewidth=0.8) +
geom_point(mapping=aes(y=Coefficients), shape=21, size=3, stroke=1, fill = "white") +
geom_text(mapping=aes(y=max(Coefficients)+max(SEs)+0.05, label = pval_diff), size=7, color='black') +
theme(text = element_text(size = 22), axis.text = element_text(size = 22),
panel.grid.major = element_blank(), panel.grid.minor = element_blank(),
panel.background = element_blank(), axis.line = element_line(colour = "black")) +
scale_color_manual(breaks = c("F[m]", "F[n]", "O"),
values=c('deepskyblue', 'darkorange', 'green3'),
name='', labels = parse_format())+
theme(legend.position = c(0.7, 0.07), legend.direction = "horizontal",
legend.text.align = 0, legend.text = element_text(size=22)) +
scale_x_discrete(name ="Value estimation bout", breaks=c("1","2"))
ggplot(data=gt_val_results, mapping=aes(x=Bout, color=Dimension)) +
geom_line(mapping=aes(y=Coefficients), linewidth=1) +
geom_errorbar(mapping=aes(ymin=Coefficients-SEs, ymax=Coefficients+SEs), width=0.2, linewidth=0.8) +
geom_point(mapping=aes(y=Coefficients), shape=21, size=3, stroke=1, fill = "white") +
geom_text(mapping=aes(y=max(Coefficients)+max(SEs)+0.05, label = pval_diff), size=7, color='black') +
theme(text = element_text(size = 22), axis.text = element_text(size = 22),
panel.grid.major = element_blank(), panel.grid.minor = element_blank(),
panel.background = element_blank(), axis.line = element_line(colour = "black")) +
scale_color_manual(breaks = c("F[m]", "F[n]", "O"),
values=c('deepskyblue', 'darkorange', 'green3'),
name='', labels = parse_format())+
theme(legend.position = c(0.7, 0.07), legend.direction = "horizontal",
legend.text.align = 0, legend.text = element_text(size=22)) +
scale_x_discrete(name ="Value estimation bout", limits=c("1","2"))
ggsave(filename="prob_est_betas_lme_sep.pdf", path=figure_data_dir, device='pdf',
width=6.5, height=5.5)
ggplot(data=gt_val_results, mapping=aes(x=Bout, color=Dimension)) +
geom_line(mapping=aes(y=Coefficients), linewidth=1) +
geom_errorbar(mapping=aes(ymin=Coefficients-SEs, ymax=Coefficients+SEs), width=0.2, linewidth=0.8) +
geom_point(mapping=aes(y=Coefficients), shape=21, size=3, stroke=1, fill = "white") +
geom_text(mapping=aes(y=max(Coefficients)+max(SEs)+0.05, label = pval_diff), size=7, color='black') +
theme(text = element_text(size = 22), axis.text = element_text(size = 22),
panel.grid.major = element_blank(), panel.grid.minor = element_blank(),
panel.background = element_blank(), axis.line = element_line(colour = "black")) +
scale_color_manual(breaks = c("F[m]", "F[n]", "O"),
values=c('deepskyblue', 'darkorange', 'green3'),
name='', labels = parse_format())+
theme(
legend.text.align = 0, legend.text = element_text(size=22)) +
scale_x_discrete(name ="Value estimation bout", limits=c("1","2"))
ggsave(filename="prob_est_betas_lme_sep.pdf", path=figure_data_dir, device='pdf',
width=6.5, height=5.5)
ggplot(data=gt_val_results, mapping=aes(x=Bout, color=Dimension)) +
geom_line(mapping=aes(y=Coefficients), linewidth=1) +
geom_errorbar(mapping=aes(ymin=Coefficients-SEs, ymax=Coefficients+SEs), width=0.2, linewidth=0.8) +
geom_point(mapping=aes(y=Coefficients), shape=21, size=3, stroke=1, fill = "white") +
geom_text(mapping=aes(y=max(Coefficients)+max(SEs)+0.05, label = pval_diff), size=7, color='black') +
theme(text = element_text(size = 22), axis.text = element_text(size = 22),
panel.grid.major = element_blank(), panel.grid.minor = element_blank(),
panel.background = element_blank(), axis.line = element_line(colour = "black")) +
scale_color_manual(breaks = c("F[m]", "F[n]", "O"),
values=c('deepskyblue', 'darkorange', 'green3'),
name='', labels = parse_format())+
theme(legend.position = c(0.7, 0.07), legend.direction = "horizontal",
legend.text.align = 0, legend.text = element_text(size=22)) +
scale_x_discrete(name ="Value estimation bout", limits=1:2)
ggplot(data=gt_val_results, mapping=aes(x=Bout, color=Dimension)) +
geom_line(mapping=aes(y=Coefficients), linewidth=1) +
geom_errorbar(mapping=aes(ymin=Coefficients-SEs, ymax=Coefficients+SEs), width=0.2, linewidth=0.8) +
geom_point(mapping=aes(y=Coefficients), shape=21, size=3, stroke=1, fill = "white") +
geom_text(mapping=aes(y=max(Coefficients)+max(SEs)+0.05, label = pval_diff), size=7, color='black') +
theme(text = element_text(size = 22), axis.text = element_text(size = 22),
panel.grid.major = element_blank(), panel.grid.minor = element_blank(),
panel.background = element_blank(), axis.line = element_line(colour = "black")) +
scale_color_manual(breaks = c("F[m]", "F[n]", "O"),
values=c('deepskyblue', 'darkorange', 'green3'),
name='', labels = parse_format())+
theme(legend.position = c(0.7, 0.07), legend.direction = "horizontal",
legend.text.align = 0, legend.text = element_text(size=22)) +
scale_x_discrete(name ="Value estimation bout", limits=factor(1:2))
ggplot(data=anova_results, mapping=aes(x=Bout, color=Dimension)) +
geom_line(mapping=aes(y=EtaSquared), linewidth=1) +
geom_point(mapping=aes(y=EtaSquared), shape=21, size=3, stroke=1, fill = "white") +
theme(text = element_text(size = 22), axis.text = element_text(size = 22),
panel.grid.major = element_blank(), panel.grid.minor = element_blank(),
panel.background = element_blank(), axis.line = element_line(colour = "black")) +
scale_color_manual(breaks = c("F[m]", "F[n]", "O"),
values=c('deepskyblue', 'darkorange', 'green3'),
name='', labels = parse_format())+
theme(legend.position = c(0.7, 0.07), legend.direction = "horizontal",
legend.text = element_text(size=22), legend.text.align = 0) +
ylab(expression(eta[p]^2)) +
scale_x_discrete(name ="Value estimation bout", limits=factor(1:4))
library(lme4)
library(lmerTest)
library(tidyverse)
library(effectsize)
library(car)
library(scales)
library(flextable)
processed_data_dir <- "~/Documents/Attn_MdPRL/Py-attention-project-analysis/data/Processed Sunapee High"
figure_data_dir <- "~/Documents/Attn_MdPRL/Py-attention-project-analysis/figures/All Processed Sunapee High"
table_data_dir <- "~/Documents/Attn_MdPRL/Py-attention-project-analysis/tables/All Processed Sunapee High"
choice_curve_data <- read.csv(file.path(processed_data_dir, "choice_curve_df.csv"))
# choice_curve_data <- choice_curve_data %>% filter(block>0)
choice_curve_data$block <- scale(choice_curve_data$block)
choice_curve_data <- choice_curve_data %>% mutate(pFavg = (pFinf+pFnoninf))
model <- glmer(prob ~ (pFinf+pFnoninf+pO) + ((pFinf+pFnoninf+pO)||subj),
data=choice_curve_data, family = binomial(link = "logit"),
control=glmerControl(optimizer = "bobyqa"))
# model_sim <- glmer(prob ~ (pFinf+pFnoninf+pO) + (pFinf+pFnoninf+pO-1||subj),
#                data=choice_curve_data, family = binomial(link = "logit"),
#                control=glmerControl(optimizer = "bobyqa"))
# anova(model, model_sim)
summary(model)
linearHypothesis(model, "pFinf-pFnoninf=0", verbose=TRUE)
model <- glmer(prob ~ (pFinf+pFnoninf+pO) + ((pFinf+pFnoninf-1)||subj),
data=choice_curve_data, family = binomial(link = "logit"),
control=glmerControl(optimizer = "bobyqa"))
# model_sim <- glmer(prob ~ (pFinf+pFnoninf+pO) + (pFinf+pFnoninf+pO-1||subj),
#                data=choice_curve_data, family = binomial(link = "logit"),
#                control=glmerControl(optimizer = "bobyqa"))
# anova(model, model_sim)
summary(model)
linearHypothesis(model, "pFinf-pFnoninf=0", verbose=TRUE)
sigmoid <- function(x) {1/(1+exp(-x))}
ggplot(data=choice_curve_data, mapping=aes(y=prob)) +
geom_function(fun = \(x) sigmoid(coef(summary(model))['pFinf','Estimate']*x), color='deepskyblue', linewidth=1.2) +
geom_function(fun = \(x) sigmoid(coef(summary(model))['pFnoninf','Estimate']*x), color='darkorange', linewidth=1.2) +
stat_summary(aes(x=pFinf, color="F[m]"), fun.data = mean_se,  geom = "errorbar",  width=0.02, linewidth=1) +
stat_summary(aes(x=pFinf, color="F[m]"), fun = "mean", geom='point', shape=21, fill='white', size=3, stroke=1) +
stat_summary(aes(x=pFnoninf, color="F[n]"), fun.data = mean_se,  geom = "errorbar", width=0.02, linewidth=1) +
stat_summary(aes(x=pFnoninf, color="F[n]"), fun = "mean", geom='point',  shape=21, fill='white', size=3, stroke=1) +
theme(text = element_text(size = 22), axis.text = element_text(size = 22),
panel.grid.major = element_blank(), panel.grid.minor = element_blank(),
panel.background = element_blank(), axis.line = element_line(colour = "black"))+
labs(color='Feature')+
scale_x_continuous(limits=c(-1.1, 1.1), name='Log ratio of values') +
scale_y_continuous(name='Choice probability') +
scale_color_manual(breaks = c("F[m]", "F[n]"),
values=c('deepskyblue', 'darkorange'),
name='', labels = parse_format()) +
theme(legend.position = c(0.75, 0.07), legend.direction = 'horizontal', legend.text = element_text(size=22))
ggsave(filename="choice_curves_slope_lme.pdf", path=figure_data_dir, device='pdf',
width=5.5, height=5.5)
ggplot(data=choice_curve_data, mapping=aes(y=prob)) +
geom_function(fun = \(x) sigmoid(coef(summary(model))['pFinf','Estimate']*x), color='deepskyblue', linewidth=1.2) +
geom_function(fun = \(x) sigmoid(coef(summary(model))['pFnoninf','Estimate']*x), color='darkorange', linewidth=1.2) +
stat_summary(aes(x=pFinf, color="F[m]"), fun.data = mean_se,  geom = "errorbar",  width=0.02, linewidth=1) +
stat_summary(aes(x=pFinf, color="F[m]"), fun = "mean", geom='point', shape=21, fill='white', size=3, stroke=1) +
stat_summary(aes(x=pFnoninf, color="F[n]"), fun.data = mean_se,  geom = "errorbar", width=0.02, linewidth=1) +
stat_summary(aes(x=pFnoninf, color="F[n]"), fun = "mean", geom='point',  shape=21, fill='white', size=3, stroke=1) +
theme(text = element_text(size = 22), axis.text = element_text(size = 22),
panel.grid.major = element_blank(), panel.grid.minor = element_blank(),
panel.background = element_blank(), axis.line = element_line(colour = "black"))+
labs(color='Feature')+
scale_x_continuous(limits=c(-1.1, 1.1), name='Log ratio of values') +
scale_y_continuous(limits=c(0.25, 0.75), name='Choice probability') +
scale_color_manual(breaks = c("F[m]", "F[n]"),
values=c('deepskyblue', 'darkorange'),
name='', labels = parse_format()) +
theme(legend.position = c(0.75, 0.07), legend.direction = 'horizontal', legend.text = element_text(size=22))
ggplot(data=choice_curve_data, mapping=aes(y=prob)) +
geom_function(fun = \(x) sigmoid(coef(summary(model))['pFinf','Estimate']*x), color='deepskyblue', linewidth=1.2) +
geom_function(fun = \(x) sigmoid(coef(summary(model))['pFnoninf','Estimate']*x), color='darkorange', linewidth=1.2) +
stat_summary(aes(x=pFinf, color="F[m]"), fun.data = mean_se,  geom = "errorbar",  width=0.02, linewidth=1) +
stat_summary(aes(x=pFinf, color="F[m]"), fun = "mean", geom='point', shape=21, fill='white', size=3, stroke=1) +
stat_summary(aes(x=pFnoninf, color="F[n]"), fun.data = mean_se,  geom = "errorbar", width=0.02, linewidth=1) +
stat_summary(aes(x=pFnoninf, color="F[n]"), fun = "mean", geom='point',  shape=21, fill='white', size=3, stroke=1) +
theme(text = element_text(size = 22), axis.text = element_text(size = 22),
panel.grid.major = element_blank(), panel.grid.minor = element_blank(),
panel.background = element_blank(), axis.line = element_line(colour = "black"))+
labs(color='Feature')+
scale_x_continuous(limits=c(-1.1, 1.1), name='Log ratio of values') +
scale_y_continuous(name='Choice probability') +
scale_color_manual(breaks = c("F[m]", "F[n]"),
values=c('deepskyblue', 'darkorange'),
name='', labels = parse_format()) +
theme(legend.position = c(0.75, 0.07), legend.direction = 'horizontal', legend.text = element_text(size=22))
ggsave(filename="choice_curves_slope_lme.pdf", path=figure_data_dir, device='pdf',
width=5.5, height=5.5)
ggplot(data=choice_curve_data, mapping=aes(y=prob)) +
geom_function(fun = \(x) sigmoid(coef(summary(model))['pFinf','Estimate']*x), color='deepskyblue', linewidth=1.2) +
geom_function(fun = \(x) sigmoid(coef(summary(model))['pFnoninf','Estimate']*x), color='darkorange', linewidth=1.2) +
stat_summary(aes(x=pFinf, color="F[m]"), fun.data = mean_se,  geom = "errorbar",  width=0.02, linewidth=1) +
stat_summary(aes(x=pFinf, color="F[m]"), fun = "mean", geom='point', shape=21, fill='white', size=3, stroke=1) +
stat_summary(aes(x=pFnoninf, color="F[n]"), fun.data = mean_se,  geom = "errorbar", width=0.02, linewidth=1) +
stat_summary(aes(x=pFnoninf, color="F[n]"), fun = "mean", geom='point',  shape=21, fill='white', size=3, stroke=1) +
theme(text = element_text(size = 22), axis.text = element_text(size = 22),
panel.grid.major = element_blank(), panel.grid.minor = element_blank(),
panel.background = element_blank(), axis.line = element_line(colour = "black"))+
labs(color='Feature')+
scale_x_continuous(limits=c(-1.1, 1.1), name='Log ratio of values') +
scale_y_continuous(name='Choice probability') +
scale_color_manual(breaks = c("F[m]", "F[n]"),
values=c('deepskyblue', 'darkorange'),
name='', labels = parse_format()) +
theme(legend.position = c(0.75, 0.07), legend.direction = 'horizontal', legend.text = element_text(size=22))+
ylims(c(0.25, 0.75))
ggplot(data=choice_curve_data, mapping=aes(y=prob)) +
geom_function(fun = \(x) sigmoid(coef(summary(model))['pFinf','Estimate']*x), color='deepskyblue', linewidth=1.2) +
geom_function(fun = \(x) sigmoid(coef(summary(model))['pFnoninf','Estimate']*x), color='darkorange', linewidth=1.2) +
stat_summary(aes(x=pFinf, color="F[m]"), fun.data = mean_se,  geom = "errorbar",  width=0.02, linewidth=1) +
stat_summary(aes(x=pFinf, color="F[m]"), fun = "mean", geom='point', shape=21, fill='white', size=3, stroke=1) +
stat_summary(aes(x=pFnoninf, color="F[n]"), fun.data = mean_se,  geom = "errorbar", width=0.02, linewidth=1) +
stat_summary(aes(x=pFnoninf, color="F[n]"), fun = "mean", geom='point',  shape=21, fill='white', size=3, stroke=1) +
theme(text = element_text(size = 22), axis.text = element_text(size = 22),
panel.grid.major = element_blank(), panel.grid.minor = element_blank(),
panel.background = element_blank(), axis.line = element_line(colour = "black"))+
labs(color='Feature')+
scale_x_continuous(limits=c(-1.1, 1.1), name='Log ratio of values') +
scale_y_continuous(name='Choice probability') +
scale_color_manual(breaks = c("F[m]", "F[n]"),
values=c('deepskyblue', 'darkorange'),
name='', labels = parse_format()) +
theme(legend.position = c(0.75, 0.07), legend.direction = 'horizontal', legend.text = element_text(size=22))+
ylim(c(0.25, 0.75))
ggplot(data=choice_curve_data, mapping=aes(y=prob)) +
geom_function(fun = \(x) sigmoid(coef(summary(model))['pFinf','Estimate']*x), color='deepskyblue', linewidth=1.2) +
geom_function(fun = \(x) sigmoid(coef(summary(model))['pFnoninf','Estimate']*x), color='darkorange', linewidth=1.2) +
stat_summary(aes(x=pFinf, color="F[m]"), fun.data = mean_se,  geom = "errorbar",  width=0.02, linewidth=1) +
stat_summary(aes(x=pFinf, color="F[m]"), fun = "mean", geom='point', shape=21, fill='white', size=3, stroke=1) +
stat_summary(aes(x=pFnoninf, color="F[n]"), fun.data = mean_se,  geom = "errorbar", width=0.02, linewidth=1) +
stat_summary(aes(x=pFnoninf, color="F[n]"), fun = "mean", geom='point',  shape=21, fill='white', size=3, stroke=1) +
theme(text = element_text(size = 22), axis.text = element_text(size = 22),
panel.grid.major = element_blank(), panel.grid.minor = element_blank(),
panel.background = element_blank(), axis.line = element_line(colour = "black"))+
labs(color='Feature')+
scale_x_continuous(limits=c(-1.1, 1.1), name='Log ratio of values') +
scale_y_continuous(name='Choice probability') +
scale_color_manual(breaks = c("F[m]", "F[n]"),
values=c('deepskyblue', 'darkorange'),
name='', labels = parse_format()) +
theme(legend.position = c(0.75, 0.07), legend.direction = 'horizontal', legend.text = element_text(size=22))
ggplot(data=choice_curve_data, mapping=aes(y=prob)) +
geom_function(fun = \(x) sigmoid(coef(summary(model))['pFinf','Estimate']*x), color='deepskyblue', linewidth=1.2) +
geom_function(fun = \(x) sigmoid(coef(summary(model))['pFnoninf','Estimate']*x), color='darkorange', linewidth=1.2) +
stat_summary(aes(x=pFinf, color="F[m]"), fun.data = mean_se,  geom = "errorbar",  width=0.02, linewidth=1) +
stat_summary(aes(x=pFinf, color="F[m]"), fun = "mean", geom='point', shape=21, fill='white', size=3, stroke=1) +
stat_summary(aes(x=pFnoninf, color="F[n]"), fun.data = mean_se,  geom = "errorbar", width=0.02, linewidth=1) +
stat_summary(aes(x=pFnoninf, color="F[n]"), fun = "mean", geom='point',  shape=21, fill='white', size=3, stroke=1) +
theme(text = element_text(size = 22), axis.text = element_text(size = 22),
panel.grid.major = element_blank(), panel.grid.minor = element_blank(),
panel.background = element_blank(), axis.line = element_line(colour = "black"),
plot.margin = margin(10, 10, 10, 100))+
labs(color='Feature')+
scale_x_continuous(limits=c(-1.1, 1.1), name='Log ratio of values') +
scale_y_continuous(name='Choice probability') +
scale_color_manual(breaks = c("F[m]", "F[n]"),
values=c('deepskyblue', 'darkorange'),
name='', labels = parse_format()) +
theme(legend.position = c(0.75, 0.07), legend.direction = 'horizontal', legend.text = element_text(size=22))
ggplot(data=choice_curve_data, mapping=aes(y=prob)) +
geom_function(fun = \(x) sigmoid(coef(summary(model))['pFinf','Estimate']*x), color='deepskyblue', linewidth=1.2) +
geom_function(fun = \(x) sigmoid(coef(summary(model))['pFnoninf','Estimate']*x), color='darkorange', linewidth=1.2) +
stat_summary(aes(x=pFinf, color="F[m]"), fun.data = mean_se,  geom = "errorbar",  width=0.02, linewidth=1) +
stat_summary(aes(x=pFinf, color="F[m]"), fun = "mean", geom='point', shape=21, fill='white', size=3, stroke=1) +
stat_summary(aes(x=pFnoninf, color="F[n]"), fun.data = mean_se,  geom = "errorbar", width=0.02, linewidth=1) +
stat_summary(aes(x=pFnoninf, color="F[n]"), fun = "mean", geom='point',  shape=21, fill='white', size=3, stroke=1) +
theme(text = element_text(size = 22), axis.text = element_text(size = 22),
panel.grid.major = element_blank(), panel.grid.minor = element_blank(),
panel.background = element_blank(), axis.line = element_line(colour = "black"),
plot.margin = margin(10, 10, 10, 10))+
labs(color='Feature')+
scale_x_continuous(limits=c(-1.1, 1.1), name='Log ratio of values') +
scale_y_continuous(name='Choice probability') +
scale_color_manual(breaks = c("F[m]", "F[n]"),
values=c('deepskyblue', 'darkorange'),
name='', labels = parse_format()) +
theme(legend.position = c(0.75, 0.07), legend.direction = 'horizontal', legend.text = element_text(size=22))
ggsave(filename="choice_curves_slope_lme.pdf", path=figure_data_dir, device='pdf',
width=5.5, height=5.5)
library(lme4)
library(lmerTest)
library(tidyverse)
library(effectsize)
library(car)
library(gtools)
library(patchwork)
library(lme4)
library(lmerTest)
library(tidyverse)
library(effectsize)
library(car)
library(gtools)
library(patchwork)
library(flextable)
stars.pval <- function(x){
stars <- c("***", "**", "*", "+", "")
var <- c(0, 0.001, 0.01, 0.05, 0.1, 1)
i <- findInterval(x, var, left.open = T, rightmost.closed = T)
stars[i]
}
processed_data_dir <- "~/Documents/Attn_MdPRL/Py-attention-project-analysis/data/Processed Sunapee High"
figure_data_dir <- "~/Documents/Attn_MdPRL/Py-attention-project-analysis/figures/All Processed Sunapee High"
table_data_dir <- "~/Documents/Attn_MdPRL/Py-attention-project-analysis/tables/All Processed Sunapee High"
all_credit_assignment_data <- read.csv(file.path(processed_data_dir, "credit_assignment_df.csv"))
credit_assignment_data <- all_credit_assignment_data %>% filter(block==0)
model1 <- glmer(choice ~ F0_Chosen_R + F0_Chosen_C + F0_Foregone_R + F0_Foregone_C +
F1_Chosen_R + F1_Chosen_C + F1_Foregone_R + F1_Foregone_C +
O_Chosen_R + O_Chosen_C + O_Foregone_R + O_Foregone_C +
(F0_Chosen_C + F0_Foregone_R + F0_Foregone_C +
F1_Chosen_C + F1_Foregone_C +
O_Foregone_R -1||subj),
data=credit_assignment_data, family = binomial(link = "logit"),
control=glmerControl(optimizer = "bobyqa"))
print(summary(model1))
model_summary <- coef(summary(model1))
results_df <- data.frame(model_summary)
names(results_df) <- c('b', 'SE', 'z', 'p')
results_df <- results_df %>%
add_column(Predictor=c('Intercept', 'F0 chosen WSLS', 'F0 chosen CA', 'F0 foregone WSLS', 'F0 foregone CA',
'F1 chosen WSLS', 'F1 chosen CA', 'F1 foregone WSLS', 'F1 foregone CA',
'O chosen WSLS', 'O chosen CA', 'O foregone WSLS', 'O foregone CA'),
.before=0) %>%
mutate(p=if_else(p<0.001, '<0.001', as.character(round(p, 3))))
flextable(results_df) %>%
colformat_double(j=c('b', 'SE', 'z'), digits=2) %>%
colformat_double(j=c('p'), digits=3) %>%
width(width=1.5) %>%
italic(part='header') %>%
align(align='center', part='all') %>%
fontsize(size=12, part='head') %>%
save_as_html(path=file.path(table_data_dir, "credit_assignment_lme_1.html"))
varnames <- apply(expand_grid(c("Chosen", "Foregone"), c("WSLS", "CA")), 1, function(x) paste0(x, collapse="\n"))
varnames <- rep(varnames, time=3)
dimnames <- rep(c("F[m]", "F[n]", "O"), each=4)
credit_assignment_results1 <- data.frame(PlotOrder=1:12,
Dimension=dimnames,
VarNames=varnames,
Coefficients=model_summary[,"Estimate"][2:13],
SEs=model_summary[,"Std. Error"][2:13],
pvals=stars.pval(model_summary[,"Pr(>|z|)"][2:13]))
credit_assignment_results1$VarNames <- reorder(credit_assignment_results1$VarNames, credit_assignment_results1$PlotOrder)
p1 <- ggplot(data=credit_assignment_results1, mapping = aes(x=VarNames, group=Dimension)) +
geom_bar(mapping=aes(y=Coefficients, fill=Dimension), stat='identity', position=position_dodge(.9)) +
geom_errorbar(mapping=aes(ymin=Coefficients-SEs, ymax=Coefficients+SEs), color='black',
position=position_dodge(.9), width=0.2, show.legend = FALSE) +
geom_text(mapping=aes(y=Coefficients+sign(Coefficients)*(SEs+0.025)-0.025, label=pvals),
position=position_dodge(.9), vjust='center', size=12) +
theme(text = element_text(size = 28), axis.text = element_text(size = 28), axis.title.x = element_blank(),
panel.grid.major = element_blank(), panel.grid.minor = element_blank(),
panel.background = element_blank(), axis.line = element_line(colour = "black")) +
scale_color_manual(breaks = c("F[m]", "F[n]", "O"), values=c('deepskyblue', 'darkorange', 'green3')) +
scale_fill_manual(breaks = c("F[m]", "F[n]", "O"), values=c('deepskyblue', 'darkorange', 'green3'),
labels = parse_format())+
theme(legend.text = element_text(size=28), legend.text.align = 0,
legend.title=element_blank(), legend.position = c(0.9, 0.9)) +
ggtitle('First block') +
ylim(-0.65, 0.8)
p1
ggsave(filename="credit_assignment_lme_0.pdf", path=figure_data_dir, device='pdf',
width=7, height=5)
p1 <- ggplot(data=credit_assignment_results1, mapping = aes(x=VarNames, group=Dimension)) +
geom_bar(mapping=aes(y=Coefficients, fill=Dimension), stat='identity', position=position_dodge(.9)) +
geom_errorbar(mapping=aes(ymin=Coefficients-SEs, ymax=Coefficients+SEs), color='black',
position=position_dodge(.9), width=0.2, show.legend = FALSE) +
geom_text(mapping=aes(y=Coefficients+sign(Coefficients)*(SEs+0.025)-0.025, label=pvals),
position=position_dodge(.9), vjust='center', size=12) +
theme(text = element_text(size = 28), axis.text = element_text(size = 28), axis.title.x = element_blank(),
panel.grid.major = element_blank(), panel.grid.minor = element_blank(),
panel.background = element_blank(), axis.line = element_line(colour = "black")) +
scale_color_manual(breaks = c("F[m]", "F[n]", "O"), values=c('deepskyblue', 'darkorange', 'green3')) +
scale_fill_manual(breaks = c("F[m]", "F[n]", "O"), values=c('deepskyblue', 'darkorange', 'green3'),
labels = parse_format())+
theme(legend.text = element_text(size=28), legend.text.align = 0,
legend.title=element_blank(), legend.position = c(0.9, 0.9))
ggsave(filename="credit_assignment_lme_0.pdf", path=figure_data_dir, device='pdf',
width=8, height=5)
p1
ggsave(filename="credit_assignment_lme_0.pdf", path=figure_data_dir, device='pdf',
width=8, height=5)
p1 <- ggplot(data=credit_assignment_results1, mapping = aes(x=VarNames, group=Dimension)) +
geom_bar(mapping=aes(y=Coefficients, fill=Dimension), stat='identity', position=position_dodge(.9)) +
geom_errorbar(mapping=aes(ymin=Coefficients-SEs, ymax=Coefficients+SEs), color='black',
position=position_dodge(.9), width=0.2, show.legend = FALSE) +
geom_text(mapping=aes(y=Coefficients+sign(Coefficients)*(SEs+0.025)-0.025, label=pvals),
position=position_dodge(.9), vjust='center', size=12) +
theme(text = element_text(size = 28), axis.text = element_text(size = 28), axis.title.x = element_blank(),
panel.grid.major = element_blank(), panel.grid.minor = element_blank(),
panel.background = element_blank(), axis.line = element_line(colour = "black")) +
scale_color_manual(breaks = c("F[m]", "F[n]", "O"), values=c('deepskyblue', 'darkorange', 'green3')) +
scale_fill_manual(breaks = c("F[m]", "F[n]", "O"), values=c('deepskyblue', 'darkorange', 'green3'),
labels = parse_format())+
theme(legend.text = element_text(size=28), legend.text.align = 0,
legend.title=element_blank(), legend.position = c(0.9, 0.9)) +
ylim(-0.65, 0.65)
ggsave(filename="credit_assignment_lme_0.pdf", path=figure_data_dir, device='pdf',
width=8, height=5)
p1
p1 <- ggplot(data=credit_assignment_results1, mapping = aes(x=VarNames, group=Dimension)) +
geom_bar(mapping=aes(y=Coefficients, fill=Dimension), stat='identity', position=position_dodge(.9)) +
geom_errorbar(mapping=aes(ymin=Coefficients-SEs, ymax=Coefficients+SEs), color='black',
position=position_dodge(.9), width=0.2, show.legend = FALSE) +
geom_text(mapping=aes(y=Coefficients+sign(Coefficients)*(SEs+0.025)-0.025, label=pvals),
position=position_dodge(.9), vjust='center', size=12) +
theme(text = element_text(size = 28), axis.text = element_text(size = 28), axis.title.x = element_blank(),
panel.grid.major = element_blank(), panel.grid.minor = element_blank(),
panel.background = element_blank(), axis.line = element_line(colour = "black")) +
scale_color_manual(breaks = c("F[m]", "F[n]", "O"), values=c('deepskyblue', 'darkorange', 'green3')) +
scale_fill_manual(breaks = c("F[m]", "F[n]", "O"), values=c('deepskyblue', 'darkorange', 'green3'),
labels = parse_format())+
theme(legend.text = element_text(size=28), legend.text.align = 0,
legend.title=element_blank(), legend.position = c(0.9, 0.9)
plot.margin = margin(10, 10, 10, 10)) +
p1 <- ggplot(data=credit_assignment_results1, mapping = aes(x=VarNames, group=Dimension)) +
geom_bar(mapping=aes(y=Coefficients, fill=Dimension), stat='identity', position=position_dodge(.9)) +
geom_errorbar(mapping=aes(ymin=Coefficients-SEs, ymax=Coefficients+SEs), color='black',
position=position_dodge(.9), width=0.2, show.legend = FALSE) +
geom_text(mapping=aes(y=Coefficients+sign(Coefficients)*(SEs+0.025)-0.025, label=pvals),
position=position_dodge(.9), vjust='center', size=12) +
theme(text = element_text(size = 28), axis.text = element_text(size = 28), axis.title.x = element_blank(),
panel.grid.major = element_blank(), panel.grid.minor = element_blank(),
panel.background = element_blank(), axis.line = element_line(colour = "black")) +
scale_color_manual(breaks = c("F[m]", "F[n]", "O"), values=c('deepskyblue', 'darkorange', 'green3')) +
scale_fill_manual(breaks = c("F[m]", "F[n]", "O"), values=c('deepskyblue', 'darkorange', 'green3'),
labels = parse_format())+
theme(legend.text = element_text(size=28), legend.text.align = 0,
legend.title=element_blank(), legend.position = c(0.9, 0.9),
plot.margin = margin(10, 10, 10, 10)) +
ylim(-0.65, 0.65)
p1
ggsave(filename="credit_assignment_lme_0.pdf", path=figure_data_dir, device='pdf',
width=8, height=5)
p1 <- ggplot(data=credit_assignment_results1, mapping = aes(x=VarNames, group=Dimension)) +
geom_bar(mapping=aes(y=Coefficients, fill=Dimension), stat='identity', position=position_dodge(.9)) +
geom_errorbar(mapping=aes(ymin=Coefficients-SEs, ymax=Coefficients+SEs), color='black',
position=position_dodge(.9), width=0.2, show.legend = FALSE) +
geom_text(mapping=aes(y=Coefficients+sign(Coefficients)*(SEs+0.025), label=pvals),
position=position_dodge(.9), vjust='center', size=12) +
theme(text = element_text(size = 28), axis.text = element_text(size = 28), axis.title.x = element_blank(),
panel.grid.major = element_blank(), panel.grid.minor = element_blank(),
panel.background = element_blank(), axis.line = element_line(colour = "black")) +
scale_color_manual(breaks = c("F[m]", "F[n]", "O"), values=c('deepskyblue', 'darkorange', 'green3')) +
scale_fill_manual(breaks = c("F[m]", "F[n]", "O"), values=c('deepskyblue', 'darkorange', 'green3'),
labels = parse_format())+
theme(legend.text = element_text(size=28), legend.text.align = 0,
legend.title=element_blank(), legend.position = c(0.9, 0.9),
plot.margin = margin(10, 10, 10, 10)) +
ylim(-0.65, 0.7)
p1
p1 <- ggplot(data=credit_assignment_results1, mapping = aes(x=VarNames, group=Dimension)) +
geom_bar(mapping=aes(y=Coefficients, fill=Dimension), stat='identity', position=position_dodge(.9)) +
geom_errorbar(mapping=aes(ymin=Coefficients-SEs, ymax=Coefficients+SEs), color='black',
position=position_dodge(.9), width=0.2, show.legend = FALSE) +
geom_text(mapping=aes(y=Coefficients+sign(Coefficients)*(SEs+0.05), label=pvals),
position=position_dodge(.9), vjust='center', size=12) +
theme(text = element_text(size = 28), axis.text = element_text(size = 28), axis.title.x = element_blank(),
panel.grid.major = element_blank(), panel.grid.minor = element_blank(),
panel.background = element_blank(), axis.line = element_line(colour = "black")) +
scale_color_manual(breaks = c("F[m]", "F[n]", "O"), values=c('deepskyblue', 'darkorange', 'green3')) +
scale_fill_manual(breaks = c("F[m]", "F[n]", "O"), values=c('deepskyblue', 'darkorange', 'green3'),
labels = parse_format())+
theme(legend.text = element_text(size=28), legend.text.align = 0,
legend.title=element_blank(), legend.position = c(0.9, 0.9),
plot.margin = margin(10, 10, 10, 10)) +
ylim(-0.65, 0.7)
p1
p1 <- ggplot(data=credit_assignment_results1, mapping = aes(x=VarNames, group=Dimension)) +
geom_bar(mapping=aes(y=Coefficients, fill=Dimension), stat='identity', position=position_dodge(.9)) +
geom_errorbar(mapping=aes(ymin=Coefficients-SEs, ymax=Coefficients+SEs), color='black',
position=position_dodge(.9), width=0.2, show.legend = FALSE) +
geom_text(mapping=aes(y=Coefficients+sign(Coefficients)*(SEs+0.05), label=pvals),
position=position_dodge(.9), vjust='center', size=8) +
theme(text = element_text(size = 28), axis.text = element_text(size = 28), axis.title.x = element_blank(),
panel.grid.major = element_blank(), panel.grid.minor = element_blank(),
panel.background = element_blank(), axis.line = element_line(colour = "black")) +
scale_color_manual(breaks = c("F[m]", "F[n]", "O"), values=c('deepskyblue', 'darkorange', 'green3')) +
scale_fill_manual(breaks = c("F[m]", "F[n]", "O"), values=c('deepskyblue', 'darkorange', 'green3'),
labels = parse_format())+
theme(legend.text = element_text(size=28), legend.text.align = 0,
legend.title=element_blank(), legend.position = c(0.9, 0.9),
plot.margin = margin(10, 10, 10, 10)) +
ylim(-0.65, 0.7)
p1
ggsave(filename="credit_assignment_lme_0.pdf", path=figure_data_dir, device='pdf',
width=8, height=5)
p1 <- ggplot(data=credit_assignment_results1, mapping = aes(x=VarNames, group=Dimension)) +
geom_bar(mapping=aes(y=Coefficients, fill=Dimension), stat='identity', position=position_dodge(.9)) +
geom_errorbar(mapping=aes(ymin=Coefficients-SEs, ymax=Coefficients+SEs), color='black',
position=position_dodge(.9), width=0.2, show.legend = FALSE) +
geom_text(mapping=aes(y=Coefficients+sign(Coefficients)*(SEs+0.05), label=pvals),
position=position_dodge(.9), vjust='center', size=8) +
theme(text = element_text(size = 28), axis.text = element_text(size = 28), axis.title.x = element_blank(),
panel.grid.major = element_blank(), panel.grid.minor = element_blank(),
panel.background = element_blank(), axis.line = element_line(colour = "black")) +
scale_color_manual(breaks = c("F[m]", "F[n]", "O"), values=c('deepskyblue', 'darkorange', 'green3')) +
scale_fill_manual(breaks = c("F[m]", "F[n]", "O"), values=c('deepskyblue', 'darkorange', 'green3'),
labels = parse_format())+
theme(legend.text = element_text(size=28), legend.text.align = 0,
legend.title=element_blank(), legend.position = c(0.9, 0.9),
plot.margin = margin(10, 10, 10, 10)) +
ylim(-0.65, 0.7)
p1
ggsave(filename="credit_assignment_lme_0.pdf", path=figure_data_dir, device='pdf',
width=10, height=6)
